// <auto-generated />
using System;
using ICS_Project.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ICS_Project.DAL.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20250304183900_CurrentState")]
    partial class CurrentState
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("ArtistMusicTrack", b =>
                {
                    b.Property<Guid>("ArtistsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MusicTracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("ArtistsId", "MusicTracksId");

                    b.HasIndex("MusicTracksId");

                    b.ToTable("ArtistMusicTrack");
                });

            modelBuilder.Entity("GenreMusicTrack", b =>
                {
                    b.Property<Guid>("GenresId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MusicTracksId")
                        .HasColumnType("TEXT");

                    b.HasKey("GenresId", "MusicTracksId");

                    b.HasIndex("MusicTracksId");

                    b.ToTable("GenreMusicTrack");
                });

            modelBuilder.Entity("ICS_Project.DAL.Entities.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("ICS_Project.DAL.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("ICS_Project.DAL.Entities.MusicTrack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("TEXT");

                    b.Property<double>("Size")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MusicTracks");
                });

            modelBuilder.Entity("ICS_Project.DAL.Entities.Playlist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfMusicTracks")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("TotalPlayTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("MusicTrackPlaylist", b =>
                {
                    b.Property<Guid>("MusicTracksId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlaylistsId")
                        .HasColumnType("TEXT");

                    b.HasKey("MusicTracksId", "PlaylistsId");

                    b.HasIndex("PlaylistsId");

                    b.ToTable("MusicTrackPlaylist");
                });

            modelBuilder.Entity("ArtistMusicTrack", b =>
                {
                    b.HasOne("ICS_Project.DAL.Entities.Artist", null)
                        .WithMany()
                        .HasForeignKey("ArtistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICS_Project.DAL.Entities.MusicTrack", null)
                        .WithMany()
                        .HasForeignKey("MusicTracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenreMusicTrack", b =>
                {
                    b.HasOne("ICS_Project.DAL.Entities.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICS_Project.DAL.Entities.MusicTrack", null)
                        .WithMany()
                        .HasForeignKey("MusicTracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MusicTrackPlaylist", b =>
                {
                    b.HasOne("ICS_Project.DAL.Entities.MusicTrack", null)
                        .WithMany()
                        .HasForeignKey("MusicTracksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ICS_Project.DAL.Entities.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
