# .NET MAUI Build Pipeline for Windows

trigger:
- '*'
pool:
  vmImage: 'windows-latest' # Correct for MAUI Windows builds

variables:
  solution: '**/*.sln' # This is fine if you build the whole solution
  # If you only want to build the MAUI app project, you can point directly to it later
  mauiAppProject: '**/ICS_Project.App.csproj' # ADJUST 'ICS_Project.App.csproj' TO YOUR ACTUAL MAUI APP PROJECT FILE NAME/PATH
  buildConfiguration: 'Release'
  # For .NET MAUI Windows, you need to specify the target framework, including the Windows SDK version.
  # Find this in your MAUI App's .csproj file under <TargetFrameworks> e.g., net8.0-windows10.0.19041.0
  windowsTargetFramework: 'net8.0-windows10.0.19041.0' # IMPORTANT: VERIFY AND ADJUST THIS FROM YOUR .CSPROJ
  dotnetSdkVersion: '8.0.406' # <<< PINNED TO YOUR LOCAL VERSION

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    packageType: 'sdk'
    version: '$(dotnetSdkVersion)'
    performMultiLevelLookup: true

- task: DotNetCoreCLI@2
  displayName: 'Restore .NET MAUI Workloads'
  inputs:
    command: 'custom'
    custom: 'workload'
    arguments: 'restore --source https://api.nuget.org/v3/index.json'

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    projects: '$(solution)'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build MAUI App for Windows'
  inputs:
    command: 'publish'
    projects: '$(mauiAppProject)'
    arguments: '--framework $(windowsTargetFramework) --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/App.Windows -r win-x64 /p:WindowsPackageType=None /p:PublishProfile=win-$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run Unit Tests'
  inputs:
    command: 'test'
    projects: '**/*[Tt]ests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build'
    publishTestResults: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Windows App Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/App.Windows'
    ArtifactName: 'maui-windows-app'
    publishLocation: 'Container'
  condition: succeededOrFailed()